/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package br.com.santander.internetbankingtestesantander.api;

import br.com.santander.internetbankingtestesantander.model.Cliente;
import br.com.santander.internetbankingtestesantander.model.ClienteResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-04-28T15:24:37.976189-03:00[America/Sao_Paulo]")
@Validated
@Api(value = "cliente", description = "the cliente API")
public interface ClienteApi {

    default ClienteApiDelegate getDelegate() {
        return new ClienteApiDelegate() {};
    }

    /**
     * POST /cliente : Cadastrar um novo Cliente
     * Cadastrar um novo Cliente
     *
     * @param cliente Para que o cadastro seja realizado, deverá ser enviado no body do request as seguintes informações. (required)
     * @return Retornará sucesso e o cliente que foi salvo (status code 200)
     */
    @ApiOperation(value = "Cadastrar um novo Cliente", nickname = "cadastrarCliente", notes = "Cadastrar um novo Cliente", response = ClienteResponse.class, tags={ "Clientes", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Retornará sucesso e o cliente que foi salvo", response = ClienteResponse.class) })
    @PostMapping(
        value = "/cliente",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<ClienteResponse> cadastrarCliente(@ApiParam(value = "Para que o cadastro seja realizado, deverá ser enviado no body do request as seguintes informações." ,required=true )  @Valid @RequestBody Cliente cliente) {
        return getDelegate().cadastrarCliente(cliente);
    }

}
